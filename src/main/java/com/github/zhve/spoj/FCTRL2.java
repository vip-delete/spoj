package com.github.zhve.spoj;

/**
 * <a href="http://www.spoj.com/problems/FCTRL2/">http://www.spoj.com/problems/FCTRL2/</a>
 */
public class FCTRL2 {
    public static void main(String[] l) throws Exception {
        byte[][] a = new byte[101][159];
        int[] b = new int[101];
        String[] c = new String[]{"1", "1", "2", "6", "24", "120", "720", "5040", "40320", "362880", "3628800", "39916800", "479001600", "6227020800", "87178291200", "1307674368000", "20922789888000", "355687428096000", "6402373705728000", "121645100408832000", "2432902008176640000", "51090942171709440000", "1124000727777607680000", "25852016738884976640000", "620448401733239439360000", "15511210043330985984000000", "403291461126605635584000000", "10888869450418352160768000000", "304888344611713860501504000000", "8841761993739701954543616000000", "265252859812191058636308480000000", "8222838654177922817725562880000000", "263130836933693530167218012160000000", "8683317618811886495518194401280000000", "295232799039604140847618609643520000000", "10333147966386144929666651337523200000000", "371993326789901217467999448150835200000000", "13763753091226345046315979581580902400000000", "523022617466601111760007224100074291200000000", "20397882081197443358640281739902897356800000000", "815915283247897734345611269596115894272000000000", "33452526613163807108170062053440751665152000000000"};
        int d = 0, e;
        for (String f : c) {
            e = 0;
            for (char g : f.toCharArray()) {
                a[d][e++] = (byte) g;
            }
            a[d][e++] = '\n';
            b[d] = e;
            d++;
        }
        long[] h = new long[10];
        h[0] = 9936384000000000L;
        h[1] = 4314260624451156L;
        h[2] = 61177528798985L;
        h[3] = 1405L;
        int i = 3;
        long j, k;
        byte[] m = new byte[16];
        int n, o, p;
        for (; ; ) {
            e = 0;
            p = i;
            j = h[p--];
            n = 0;
            while (j > 9) {
                m[n++] = (byte) (j % 10 + '0');
                j /= 10;
            }
            m[n++] = (byte) (j + '0');
            while (n > 0) {
                a[d][e++] = m[--n];
            }
            while (p >= 0) {
                j = h[p--];
                for (o = 15; o >= 0; o--) {
                    a[d][e + o] = (byte) (j % 10 + '0');
                    j /= 10;
                }
                e += 16;
            }
            a[d][e] = '\n';
            b[d] = e + 1;
            if (d > 99) {
                break;
            }
            d++;
            for (k = 0, p = 0; p <= i; ) {
                long q = h[p] * d + k;
                k = q / 10000000000000000L;
                h[p++] = q % 10000000000000000L;
            }
            if (k != 0) {
                h[i = p] = k;
            } else {
                i = p - 1;
            }
        }
        byte[] r = new byte[999];
        int s = 0;
        System.in.read(r, 0, 999);
        int t = 0;
        byte u;
        while ((u = r[s++]) != '\n') {
            t = t * 10 + u - '0';
        }
        for (d = 0; d < t; d++) {
            o = 0;
            while ((u = r[s++]) != '\n') {
                o = o * 10 + u - '0';
            }
            System.out.write(a[o], 0, b[o]);
        }
    }
}
